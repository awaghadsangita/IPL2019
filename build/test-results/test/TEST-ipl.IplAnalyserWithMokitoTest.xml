<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ipl.IplAnalyserWithMokitoTest" tests="17" skipped="0" failures="0" errors="0" timestamp="2019-12-24T10:42:20" hostname="admin1-Lenovo-Product" time="0.539">
  <properties/>
  <testcase name="givenFactSheetOFMostWickets_SortedOnEconomy_ShouldReturnPlayerWithHighestEconomy" classname="ipl.IplAnalyserWithMokitoTest" time="0.382"/>
  <testcase name="givenFactSheetOFMostWickets_SortedOnStrikingRates_ShouldReturnPlayerWithHighestStrikingRates" classname="ipl.IplAnalyserWithMokitoTest" time="0.011"/>
  <testcase name="givenFactSheetOFMostWickets_SortedOnBowlerStrikingRates_ShouldReturnPlayerWithHighestStrikingRates" classname="ipl.IplAnalyserWithMokitoTest" time="0.01"/>
  <testcase name="givenFactSheetOFMostWickets_SortedOnBowlingAverage_ShouldReturnPlayerWithHighestBowlingAverage" classname="ipl.IplAnalyserWithMokitoTest" time="0.009"/>
  <testcase name="givenFactSheetOFMostRuns_SortedOnAverageWithMaximumRunsWithBestAverage_ShouldReturnPlayerWithHighestAverageWithRuns" classname="ipl.IplAnalyserWithMokitoTest" time="0.009"/>
  <testcase name="givenFactSheetOFMostRuns_SortedOnAverageWithStrikingRate_ShouldReturnPlayerWithHighestAverageWithStrikingRate" classname="ipl.IplAnalyserWithMokitoTest" time="0.01"/>
  <testcase name="givenFactSheetOFMostRuns_WithSortedOnBattingAverage_ShouldReturnPlayerWithHighestBattingAverage" classname="ipl.IplAnalyserWithMokitoTest" time="0.009"/>
  <testcase name="givenFactSheetOFMostWickets_SortedOnWicketsWithBowlingAverage_ShouldReturnPlayerWithHighestSortedFeature" classname="ipl.IplAnalyserWithMokitoTest" time="0.01"/>
  <testcase name="givenFactSheetOFMostRuns_WithSortedOnMaximumStrikingRate_ShouldReturnPlayerWithHighestStrikingRate" classname="ipl.IplAnalyserWithMokitoTest" time="0.01"/>
  <testcase name="givenFactSheetOFMostWickets_SortedOnBestStrikingRateWithFoursAndFivesWickets_ShouldReturnPlayerWithHighestSortedFeature" classname="ipl.IplAnalyserWithMokitoTest" time="0.011"/>
  <testcase name="givenFactSheetOFMostRuns_WithSortedOnStrikingRates_ShouldReturnPlayerWithHighestStrikingRate" classname="ipl.IplAnalyserWithMokitoTest" time="0.01"/>
  <testcase name="givenFactSheetOFMostRuns_WithSortedOnMaximumSixesFours_ShouldReturnPlayerWithLowestSixesFours" classname="ipl.IplAnalyserWithMokitoTest" time="0.01"/>
  <testcase name="givenMostRunsFactSheet_ReturnExactNumberOfPlayersOfSampleMap" classname="ipl.IplAnalyserWithMokitoTest" time="0.005"/>
  <testcase name="givenFactSheetOFMostRuns_WithSortedOnBattingAverage_ShouldReturnPlayerWithLowestBattingAverage" classname="ipl.IplAnalyserWithMokitoTest" time="0.005"/>
  <testcase name="givenFactSheetOFMostRuns_WithSortedOnMaximumSixesFours_ShouldReturnPlayerWithHighestSixesFours" classname="ipl.IplAnalyserWithMokitoTest" time="0.006"/>
  <testcase name="givenFactSheetOFMostRuns_WithSortedOnStrikingRates_ShouldReturnPlayerWithLowestStrikingRate" classname="ipl.IplAnalyserWithMokitoTest" time="0.007"/>
  <testcase name="givenFactSheetOFMostWickets_SortedOnBowlingAverageWithStrikingRate_ShouldReturnPlayerWithHighestSortedFeature" classname="ipl.IplAnalyserWithMokitoTest" time="0.006"/>
  <system-out><![CDATA[[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostWickets_SortedOnEconomy_ShouldReturnPlayerWithHighestEconomy (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:48)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostWickets_SortedOnStrikingRates_ShouldReturnPlayerWithHighestStrikingRates (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:48)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostWickets_SortedOnBowlerStrikingRates_ShouldReturnPlayerWithHighestStrikingRates (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:48)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostWickets_SortedOnBowlingAverage_ShouldReturnPlayerWithHighestBowlingAverage (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:48)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_SortedOnAverageWithMaximumRunsWithBestAverage_ShouldReturnPlayerWithHighestAverageWithRuns (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_SortedOnAverageWithStrikingRate_ShouldReturnPlayerWithHighestAverageWithStrikingRate (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_WithSortedOnBattingAverage_ShouldReturnPlayerWithHighestBattingAverage (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostWickets_SortedOnWicketsWithBowlingAverage_ShouldReturnPlayerWithHighestSortedFeature (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:48)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_WithSortedOnMaximumStrikingRate_ShouldReturnPlayerWithHighestStrikingRate (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostWickets_SortedOnBestStrikingRateWithFoursAndFivesWickets_ShouldReturnPlayerWithHighestSortedFeature (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:48)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_WithSortedOnStrikingRates_ShouldReturnPlayerWithHighestStrikingRate (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_WithSortedOnMaximumSixesFours_ShouldReturnPlayerWithLowestSixesFours (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenMostRunsFactSheet_ReturnExactNumberOfPlayersOfSampleMap (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_WithSortedOnBattingAverage_ShouldReturnPlayerWithLowestBattingAverage (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_WithSortedOnMaximumSixesFours_ShouldReturnPlayerWithHighestSixesFours (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostRuns_WithSortedOnStrikingRates_ShouldReturnPlayerWithLowestStrikingRate (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:61)

[MockitoHint] IplAnalyserWithMokitoTest.givenFactSheetOFMostWickets_SortedOnBowlingAverageWithStrikingRate_ShouldReturnPlayerWithHighestSortedFeature (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at ipl.IplAnalyserWithMokitoTest.runOnceBeforeClass(IplAnalyserWithMokitoTest.java:48)

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
